Traceback (most recent call last):
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 580, in <module>
    scene_single(dataset_name, model_name, attack_name)
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 555, in scene_single
    our_ft(
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 346, in our_ft
    class_rank = get_classes_rank()
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 171, in get_classes_rank
    dataset_name = dataset_name
UnboundLocalError: local variable 'dataset_name' referenced before assignment
Traceback (most recent call last):
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 573, in <module>
    scene_single(dataset_name, model_name, attack_name, r_seed=667)
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 551, in scene_single
    our_ft(
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 285, in our_ft
    asr = e.eval_acc()
  File "/home/mml/workspace/backdoor_detect/codes/common/eval_model.py", line 60, in eval_acc
    preds = self.model(X)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mml/workspace/backdoor_detect/codes/datasets/GTSRB/models/densenet.py", line 78, in forward
    out = self.trans1(self.dense1(out))
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/container.py", line 215, in forward
    input = module(input)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mml/workspace/backdoor_detect/codes/datasets/GTSRB/models/densenet.py", line 19, in forward
    out = self.conv2(F.relu(self.bn2(out)))
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/functional.py", line 1471, in relu
    result = torch.relu(input)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 256.00 MiB. GPU 1 has a total capacty of 79.15 GiB of which 113.81 MiB is free. Process 1254578 has 6.14 GiB memory in use. Process 1820993 has 6.15 GiB memory in use. Process 2093261 has 25.72 GiB memory in use. Process 2395080 has 25.72 GiB memory in use. Process 143436 has 1.35 GiB memory in use. Process 142792 has 1.35 GiB memory in use. Process 140650 has 1.35 GiB memory in use. Process 141770 has 1.35 GiB memory in use. Process 156003 has 1.26 GiB memory in use. Process 160274 has 1.26 GiB memory in use. Process 162432 has 1.26 GiB memory in use. Process 157985 has 1.26 GiB memory in use. Process 167626 has 3.17 GiB memory in use. Including non-PyTorch memory, this process has 1.60 GiB memory in use. Of the allocated memory 997.09 MiB is allocated by PyTorch, and 136.91 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
Traceback (most recent call last):
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 573, in <module>
    scene_single(dataset_name, model_name, attack_name, r_seed=667)
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 551, in scene_single
    our_ft(
  File "/home/mml/workspace/backdoor_detect/codes/ourMethod/retrain.py", line 285, in our_ft
    asr = e.eval_acc()
  File "/home/mml/workspace/backdoor_detect/codes/common/eval_model.py", line 60, in eval_acc
    preds = self.model(X)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torchvision/models/densenet.py", line 213, in forward
    features = self.features(x)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/container.py", line 215, in forward
    input = module(input)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/modules/batchnorm.py", line 171, in forward
    return F.batch_norm(
  File "/home/mml/anaconda3/envs/backdoor_detect/lib/python3.9/site-packages/torch/nn/functional.py", line 2478, in batch_norm
    return torch.batch_norm(
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.53 GiB. GPU 0 has a total capacty of 79.15 GiB of which 517.69 MiB is free. Process 993950 has 8.21 GiB memory in use. Process 2633059 has 25.72 GiB memory in use. Process 536812 has 5.46 GiB memory in use. Process 535392 has 5.46 GiB memory in use. Process 541202 has 5.46 GiB memory in use. Process 705635 has 9.74 GiB memory in use. Process 706774 has 9.74 GiB memory in use. Process 754270 has 6.48 GiB memory in use. Including non-PyTorch memory, this process has 2.28 GiB memory in use. Of the allocated memory 1.84 GiB is allocated by PyTorch, and 18.93 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
